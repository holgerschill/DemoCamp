/*
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.web

import com.google.inject.Binder
import org.eclipse.xtend.lib.annotations.FinalFieldsConstructor
import org.eclipse.xtext.resource.impl.ResourceDescriptionsData
import org.eclipse.xtext.web.server.model.IWebResourceSetProvider
import org.eclipse.xtext.web.server.persistence.IResourceBaseProvider
import org.eclipse.xtext.web.server.persistence.IServerResourceHandler
import org.xtext.example.mydsl.web.resources.IndexBuildingFileResourceHandler
import org.xtext.example.mydsl.web.resources.WebResourceSetProvider

/**
 * Use this class to register additional components to be used within the web application.
 */
@FinalFieldsConstructor
class MyDslWebModule extends AbstractMyDslWebModule {
	
	val IResourceBaseProvider resourceBaseProvider
	val ResourceDescriptionsData index

	def Class<? extends IWebResourceSetProvider> bindIWebResourceSetProvider() {
		return WebResourceSetProvider
	}

	def void configureResourceBaseProvider(Binder binder) {
		if(resourceBaseProvider !== null) binder.bind(IResourceBaseProvider).toInstance(resourceBaseProvider)
		if(index != null) binder.bind(ResourceDescriptionsData).toInstance(index)
	}

	def Class<? extends IServerResourceHandler> bindIServerResourceHandler() {
		return IndexBuildingFileResourceHandler
	}
}
